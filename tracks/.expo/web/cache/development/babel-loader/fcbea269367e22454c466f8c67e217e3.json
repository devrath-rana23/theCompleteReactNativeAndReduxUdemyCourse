{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport createDataContext from \"./createDataContext\";\n\nvar locationReducer = function locationReducer(state, action) {\n  switch (action.type) {\n    case \"add_current_location\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentLocation: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar startRecording = function startRecording(dispatch) {\n  return function () {};\n};\n\nvar stopRecording = function stopRecording(dispatch) {\n  return function () {};\n};\n\nvar addLocation = function addLocation(dispatch) {\n  return function (location) {\n    dispatch({\n      type: \"add_current_location\",\n      payload: location\n    });\n  };\n};\n\nvar _createDataContext = createDataContext(locationReducer, {\n  startRecording: startRecording,\n  stopRecording: stopRecording,\n  addLocation: addLocation\n}, {\n  recording: false,\n  locations: [],\n  currentLocation: null\n}),\n    Context = _createDataContext.Context,\n    Provider = _createDataContext.Provider;\n\nexport { Context, Provider };","map":{"version":3,"names":["createDataContext","locationReducer","state","action","type","currentLocation","payload","startRecording","dispatch","stopRecording","addLocation","location","recording","locations","Context","Provider"],"sources":["/var/www/html/theCompleteReactNativeAndReduxUdemyCourse/tracks/src/context/LocationContext.js"],"sourcesContent":["import createDataContext from \"./createDataContext\";\n\nconst locationReducer = (state, action) => {\n  switch (action.type) {\n    case \"add_current_location\":\n      return { ...state, currentLocation: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst startRecording = (dispatch) => () => {};\nconst stopRecording = (dispatch) => () => {};\n\n// This will update user's current location\nconst addLocation = (dispatch) => (location) => {\n  dispatch({ type: \"add_current_location\", payload: location });\n};\n\nexport const { Context, Provider } = createDataContext(\n  locationReducer,\n  {\n    startRecording,\n    stopRecording,\n    addLocation,\n  },\n  { recording: false, locations: [], currentLocation: null }\n);\n"],"mappings":";;;;;;AAAA,OAAOA,iBAAP;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,MAAR,EAAmB;EACzC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,sBAAL;MACE,uCAAYF,KAAZ;QAAmBG,eAAe,EAAEF,MAAM,CAACG;MAA3C;;IACF;MACE,OAAOJ,KAAP;EAJJ;AAMD,CAPD;;AASA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD;EAAA,OAAc,YAAM,CAAE,CAAtB;AAAA,CAAvB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACD,QAAD;EAAA,OAAc,YAAM,CAAE,CAAtB;AAAA,CAAtB;;AAGA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACF,QAAD;EAAA,OAAc,UAACG,QAAD,EAAc;IAC9CH,QAAQ,CAAC;MAAEJ,IAAI,EAAE,sBAAR;MAAgCE,OAAO,EAAEK;IAAzC,CAAD,CAAR;EACD,CAFmB;AAAA,CAApB;;AAIO,yBAA8BX,iBAAiB,CACpDC,eADoD,EAEpD;EACEM,cAAc,EAAdA,cADF;EAEEE,aAAa,EAAbA,aAFF;EAGEC,WAAW,EAAXA;AAHF,CAFoD,EAOpD;EAAEE,SAAS,EAAE,KAAb;EAAoBC,SAAS,EAAE,EAA/B;EAAmCR,eAAe,EAAE;AAApD,CAPoD,CAA/C;AAAA,IAAQS,OAAR,sBAAQA,OAAR;AAAA,IAAiBC,QAAjB,sBAAiBA,QAAjB"},"metadata":{},"sourceType":"module"}