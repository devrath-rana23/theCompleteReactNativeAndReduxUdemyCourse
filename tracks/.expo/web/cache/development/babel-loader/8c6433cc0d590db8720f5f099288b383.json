{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useReducer } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (function (reducer, actions, defaultValue) {\n  var Context = React.createContext();\n\n  var Provider = function Provider(_ref) {\n    var children = _ref.children;\n\n    var _useReducer = useReducer(reducer, defaultValue),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n    var boundActions = {};\n\n    for (var key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return _jsx(Context.Provider, {\n      value: _objectSpread({\n        state: state\n      }, boundActions),\n      children: children\n    });\n  };\n\n  return {\n    Context: Context,\n    Provider: Provider\n  };\n});","map":{"version":3,"sources":["/var/www/html/theCompleteReactNativeAndReduxUdemyCourse/tracks/src/context/createDataContext.js"],"names":["React","useReducer","reducer","actions","defaultValue","Context","createContext","Provider","children","state","dispatch","boundActions","key"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;AAGA,gBAAe,UAACC,OAAD,EAAUC,OAAV,EAAmBC,YAAnB,EAAoC;AACjD,MAAMC,OAAO,GAAGL,KAAK,CAACM,aAAN,EAAhB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkB;AAAA,QAAfC,QAAe,QAAfA,QAAe;;AACjC,sBAA0BP,UAAU,CAACC,OAAD,EAAUE,YAAV,CAApC;AAAA;AAAA,QAAOK,KAAP;AAAA,QAAcC,QAAd;;AAEA,QAAMC,YAAY,GAAG,EAArB;;AACA,SAAK,IAAIC,GAAT,IAAgBT,OAAhB,EAAyB;AACvBQ,MAAAA,YAAY,CAACC,GAAD,CAAZ,GAAoBT,OAAO,CAACS,GAAD,CAAP,CAAaF,QAAb,CAApB;AACD;;AAED,WACE,KAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK;AAAID,QAAAA,KAAK,EAALA;AAAJ,SAAcE,YAAd,CAAvB;AAAA,gBACGH;AADH,MADF;AAKD,GAbD;;AAgBA,SAAO;AAAEH,IAAAA,OAAO,EAAPA,OAAF;AAAWE,IAAAA,QAAQ,EAARA;AAAX,GAAP;AACD,CApBD","sourcesContent":["import React, { useReducer } from \"react\";\nimport { View, Text } from \"react-native\";\n\nexport default (reducer, actions, defaultValue) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, defaultValue);\n\n    const boundActions = {};\n    for (let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  //Provider is our component which will make data available to all of our application. Context is the Context object that we use to get access to that object\n  return { Context, Provider };\n};\n"]},"metadata":{},"sourceType":"module"}