{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport MapView, { Polyline, Circle } from \"react-native-maps\";\nimport { Context as LocationContext } from \"../context/LocationContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Map = function Map() {\n  var _useContext = useContext(LocationContext),\n      currentLocation = _useContext.state.currentLocation;\n\n  if (!currentLocation) {\n    return _jsx(ActivityIndicator, {\n      size: \"large\",\n      style: {\n        marginTop: 200\n      }\n    });\n  }\n\n  var initialLocation = {\n    longitude: -122.0312186,\n    latitude: 37.33233141\n  };\n  return _jsx(MapView, {\n    style: styles.map,\n    initialRegion: _objectSpread(_objectSpread({}, initialLocation), {}, {\n      latitudeDelta: 0.01,\n      longitudeDelta: 0.01\n    }),\n    children: _jsx(Circle, {\n      center: currentLocation.coords,\n      radius: 30,\n      strokeColor: \"rgba(158, 158, 255, 1.0)\",\n      fillColor: \"rgba(158, 158, 255, 0.3)\"\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  map: {\n    height: 300\n  }\n});\nexport default Map;","map":{"version":3,"names":["React","useContext","MapView","Polyline","Circle","Context","LocationContext","Map","currentLocation","state","marginTop","initialLocation","longitude","latitude","styles","map","latitudeDelta","longitudeDelta","coords","StyleSheet","create","height"],"sources":["/var/www/html/theCompleteReactNativeAndReduxUdemyCourse/trackexpo/src/components/Map.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { Text, StyleSheet, ActivityIndicator } from \"react-native\";\n// MapView is very similar to Image element with no height width attached to it by default\nimport MapView, { Polyline, Circle } from \"react-native-maps\";\nimport { Context as LocationContext } from \"../context/LocationContext\";\n\n// initialRegion prop decides which region in map it will show by default latitudeDelta decides zoom value on latitude\n// Polyline takes array of coordinates and show that as natural line in map\n\nconst Map = () => {\n  //Destructure off the state object\n\n  const {\n    state: { currentLocation },\n  } = useContext(LocationContext);\n\n  if (!currentLocation) {\n    return <ActivityIndicator size=\"large\" style={{ marginTop: 200 }} />;\n  }\n\n  const initialLocation = {\n    longitude: -122.0312186,\n    latitude: 37.33233141,\n  };\n\n  // region prop automatically centres our map to updated current location\n\n  return (\n    <MapView\n      style={styles.map}\n      initialRegion={{\n        ...initialLocation,\n        latitudeDelta: 0.01,\n        longitudeDelta: 0.01,\n      }}\n    >\n      <Circle\n        center={currentLocation.coords}\n        radius={30}\n        strokeColor=\"rgba(158, 158, 255, 1.0)\"\n        fillColor=\"rgba(158, 158, 255, 0.3)\"\n      />\n    </MapView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  map: {\n    height: 300,\n  },\n});\n\nexport default Map;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;AAGA,OAAOC,OAAP,IAAkBC,QAAlB,EAA4BC,MAA5B,QAA0C,mBAA1C;AACA,SAASC,OAAO,IAAIC,eAApB;;;AAKA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;EAGhB,kBAEIN,UAAU,CAACK,eAAD,CAFd;EAAA,IACWE,eADX,eACEC,KADF,CACWD,eADX;;EAIA,IAAI,CAACA,eAAL,EAAsB;IACpB,OAAO,KAAC,iBAAD;MAAmB,IAAI,EAAC,OAAxB;MAAgC,KAAK,EAAE;QAAEE,SAAS,EAAE;MAAb;IAAvC,EAAP;EACD;;EAED,IAAMC,eAAe,GAAG;IACtBC,SAAS,EAAE,CAAC,WADU;IAEtBC,QAAQ,EAAE;EAFY,CAAxB;EAOA,OACE,KAAC,OAAD;IACE,KAAK,EAAEC,MAAM,CAACC,GADhB;IAEE,aAAa,kCACRJ,eADQ;MAEXK,aAAa,EAAE,IAFJ;MAGXC,cAAc,EAAE;IAHL,EAFf;IAAA,UAQE,KAAC,MAAD;MACE,MAAM,EAAET,eAAe,CAACU,MAD1B;MAEE,MAAM,EAAE,EAFV;MAGE,WAAW,EAAC,0BAHd;MAIE,SAAS,EAAC;IAJZ;EARF,EADF;AAiBD,CAnCD;;AAqCA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,GAAG,EAAE;IACHM,MAAM,EAAE;EADL;AAD0B,CAAlB,CAAf;AAMA,eAAed,GAAf"},"metadata":{},"sourceType":"module"}