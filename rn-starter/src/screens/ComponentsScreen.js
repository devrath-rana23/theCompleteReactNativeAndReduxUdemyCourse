/*
'react' library is all about how different components work together.
When we build our app , we're going to assemble many different components 
to actually build our app.
'react' library has ton of code inside of it that knows how to make different
components work together.
'react-native' library, on the OTHER HAND knows how to take some information from those components and use it to actually show some content on the mobile device.
So, each library has it's own separate job.
*/
import React from 'react';//here we are importing REACT library into this file so not use curly braces.
import { StyleSheet, Text, View } from 'react-native';/*
Importing  three small pieces of react-native library so we are using '{}' curly braces.
So curly braces means that we want ot import just one or more small parts out of a given library in this file. 
imported Stylesheet etc.. component from 'react-native' library*/

// const ComponentsScreen=function () { This is keyword function syntax
const ComponentsScreen = () => {//This component will return a JSX which looks a lot like a HTML which tells react-native what to show on screen.
  return <View><Text style={styles.textStyle}>This is Component Screen</Text></View>;//this View Tag along with Text tag is what is called a JSX returned by ComponentScreens function/component.This is not technically a valid Javascrript.When we write out this code right here, it then passes into that React Native bundler that's running inside of our terminal.That bundler is using a tool called BABBLE to turn this JSX into some plain JavaScript code.
  //SO, let's see exact what line right there turns into when we convert it to plain JavaScript.
  // COPY That JSX element. and visit=> https://babeljs.io
  /**Pure JS of written JSX=>"use strict";

/*#__PURE__*/
  /**
  React.createElement(View, null, /*#__PURE__*//*React.createElement(Text, {
    style: styles.textStyle
  }, "This is Component Screen")); */
  //Why use JSX instead of pure javascript=> we will observe that when we put together the components, we frequently write out many different JSX elements. and in JS that will become many different JS function calls,that would result in a component that's really hard to make changes to and really hard to modify and maintain over time so we use JSX syntax to make it clean and simple for us developers.
};

// The only reason we use stylesheet.create() is that it will automatically validate the different styling rules that we are trying to apply to an element.Example if we spell fontSize incorrectly inside styling rule below i.e. syntax error than we see red box error in our screen which is genereated by Stylesheet.create() thus VALIDATING our STYLING RULES. if not used then we will not be shown error for incorrect styling.
const styles = StyleSheet.create({//styles is an object
  //Inside this object, we're going to eventually define a bunch of different groups of styles.
  //We are going to create the first style property for styles object named textStyle
  textStyle: {// We can think of this as creating a grouping of different styling rules that we're going to apply to a name called text style.
    fontSize: 30,
  },
});
//After that, we're then going to take the style that is generated by the stylesheet.create function and assigned to the styles object, and we are going to apply it to that Text element.
export default ComponentsScreen;